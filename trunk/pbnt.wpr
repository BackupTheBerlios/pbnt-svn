#!wing
#!version=2.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.file-list = [loc('Distributions/DiscreteDistribution.py'),
                  loc('Examples/ExampleModels.py'),
                  loc('General/SequenceGenerator.py'),
                  loc('General/utilities.py'),
                  loc('Graph/BayesNode.py'),
                  loc('Graph/Clique.py'),
                  loc('Graph/Cluster.py'),
                  loc('Graph/DAG.py'),
                  loc('Graph/DirectedNode.py'),
                  loc('Graph/Graph.py'),
                  loc('Graph/GraphUtilities.py'),
                  loc('Graph/JoinTree.py'),
                  loc('Graph/MoralGraph.py'),
                  loc('Graph/Node.py'),
                  loc('Graph/Sepset.py'),
                  loc('Graph/TriangleGraph.py'),
                  loc('Heap/ClusterBinaryHeap.py'),
                  loc('Heap/PriorityQueue.py'),
                  loc('Inference/EnumerationEngine.py'),
                  loc('Inference/InferenceEngine.py'),
                  loc('Inference/JunctionTreeEngine.py'),
                  loc('Network/BayesNet.py'),
                  loc('Old/OldJTreeIdeas.py'),
                  loc('testing/BayesNetTest.py'),
                  loc('testing/EnumerationTest.py'),
                  loc('testing/GraphUtilitiesTest.py'),
                  loc('testing/JunctionTreeTest.py'),
                  loc('testing/MainTest.py'),
                  loc('testing/SequenceGeneratorTest.py'),
                  loc('testing/UtilitiesTest.py'),
                  loc('working/Factor.py'),
                  loc('working/Inference/EliminationEngine.py'),
                  loc('working/Inference/MCMCEngine.py'),
                  loc('working/Learning/UpdateParams.py'),
                  loc('working/network.py')]
proj.file-type = 'normal'
[user attributes]
debug.breakpoints = {loc('testing/GraphUtilitiesTest.py'): {5: (0,
        None,
        1,
        0)},
                     loc('testing/JunctionTreeTest.py'): {71: (0,
        None,
        1,
        0),
        91: (0,
             None,
             1,
             0)},
                     loc('testing/MainTest.py'): {10: (0,
        None,
        1,
        0)}}
debug.debug-probe-history = {None: ['a = "[1 : :]"\n',
                                    'tmp = zeros([3]) + -1\n'],
                             loc('testing/GraphUtilitiesTest.py'): ['indexLi'\
        'st\n'],
                             loc('testing/MainTest.py'): ['joinTreeX.nodes\n',
        'joinTreeX.nodes[0].neighbors\n',
        'joinTreeX.nodes[1].neighbors\n',
        'n\n',
        '[node.name for node in joinTreeX.nodes[0].nodes]\n',
        '[node.name for node in joinTreeX.nodes[1].nodes]\n',
        '[node.name for node in joinTreeY.nodes[1].nodes]\n',
        '[node.name for node in joinTreeY.nodes[0].nodes]\n',
        'forest\n',
        'len(forest[0].nodes)\n',
        '[node.name for node in forest[0].nodes[0].nodes]\n',
        '[node.name for node in forest[0].nodes[1].nodes]\n',
        '[node.name for node in forest[0].nodes[2].nodes]\n',
        'ch\n',
        'indexStr[:-1]\n',
        'self.CPT[0,:,:] = -1\n',
        'self.CPT[0,:,:]\n',
        "'self.CPT' + indexStr + ' = ' + str(value)\n",
        "a = 'self.CPT' + indexStr + ' = ' + str(value)\n",
        'a\n',
        'exec a\n',
        'repr(value)\n',
        'eval(repr(value))\n',
        'exec(repr(value))\n',
        'a = exec(repr(value))\n',
        'a=exec(repr(value))\n',
        'indexStr\n',
        "exec 'self.CPT' + indexStr + ' = ' + repr( value )\n",
        'self.CPT\n',
        'indices\n',
        'axes\n',
        'self.joinTree\n',
        'c1=self.joinTree.nodes[0]\n',
        'c2=self.joinTree.nodes[1]\n',
        'c3=self.joinTree.nodes[2]\n',
        'c1.sepsets\n',
        's1=c1.sepsets\n',
        's1 = s1[0]\n',
        's1.cliqueX\n',
        's1.cliqueY\n',
        'c1 = self.joinTree.nodes[0]\n',
        'c2 = self.joinTree.nodes[1]\n',
        'c3 = self.joinTree.nodes[2]\n',
        'c3.neighbors\n',
        'c3\n',
        'isStart\n',
        'prevCluster\n',
        'sep.cliqueX\n',
        'sep.cliqueY\n',
        'value\n',
        'sepsetValue\n',
        'potential.CPT\n',
        'oldPotential\n',
        'sepset.cliqueX.neighbors\n',
        'sepset.cliqueY.neighbors\n',
        'sepset.cliqueX.\n',
        'sepset.cliqueX\n',
        'evidence\n',
        'evidence != -1\n',
        'potentialMask.CPT\n',
        ' clique.CPT.CPT\n',
        'clique.CPT.CPT\n',
        '[node.name for node in self.joinTree.nodes[0].nodes]\n',
        '[node.name for node in self.joinTree.nodes[1].nodes]\n',
        '[node.name for node in self.joinTree.nodes[2].nodes]\n',
        'c0 = self.joinTree.nodes[0]\n',
        'c0\n',
        'c1 = self.joinTree.nodes[1]\n',
        'c2 = self.joinTree.nodes[2]\n',
        'c1\n',
        'c2\n',
        'c0.neighbors\n',
        'c1.neighbors\n',
        'c2.neighbors\n',
        '[node.name for node in c0.nodes]\n',
        '[node.name for node in c1.nodes]\n',
        '[node.name for node in c2.nodes]\n',
        'neighbor \n',
        'neighbor\n',
        'currentCluster\n',
        'mu\n',
        'clusterAxis\n',
        'cliqueAxes\n',
        'clique\n',
        'self.joinTree.nodes\n',
        'self.nodes\n',
        'sepsetAxes\n',
        'sepsetAxis\n',
        'cliu\n',
        'clusterAxes\n',
        'take(self.CPT, varAndValsArray, axis=(0,1,2))\n',
        'take(self.CPT, varAndParentValsArray, axis=(0,1,2))\n',
        'values\n',
        'indec\n',
        'index\n',
        'cluster\n',
        'cluster.CPT.CPT\n',
        'cluster.CPT.CPT \n',
        'sepset.potential.CPT\n',
        'Q.CPT\n']}
debug.err-values = {None: {},
                    loc('testing/MainTest.py'): {}}
debug.exceptions-ignored = {loc('General/SequenceGenerator.py'): {17: 1,
        19: 1}}
debug.run-args = {loc('Graph/GraphUtilities.py'): 'from GraphUtilities impor'\
        't *\ngenerateArrayIndex([2,2],[0,2],[1],[1])',
                  loc('testing/UtilitiesTest.py'): 'import UtilityTest\nUtil'\
        'ityTest.test()'}
debug.shell-history = {None: ['\tfor j in a[i+1:]:\n',
                              '\t\tprint (i,j)\n',
                              'a = "hello"\n',
                              'a[0]\n',
                              'a[0] = "D"\n',
                              'a = "H"\n',
                              'b = "E"\n',
                              'a+b\n',
                              "a = ['h','e','l']\n",
                              'a.tostring\n',
                              'a.tostring()\n',
                              'a.string()\n',
                              "a = [':',3,':',4]\n",
                              'b = ones([2,3,4])\n',
                              "a = [':',1,':\n",
                              "']\n",
                              "a = [':',1,':']\n",
                              'c = "b"+str(a)\n',
                              'eval(c)\n',
                              'exec c\n',
                              "exec 'b[:,1,:]'\n",
                              "exec 'b[:,1,:]=2'\n",
                              'b[:,1,:]\n',
                              'a = [:,1,:]\n',
                              'rep(a)\n',
                              'from basic_datatypes.lists import *\n',
                              'a = [1,2,3]\n',
                              'b = repr(a)\n',
                              'eval(b)\n',
                              'c = eval(b)\n',
                              'c.index(4)\n',
                              'c.index(2)\n',
                              'a = ":,%d,:,%d"\n',
                              'b = a%(1,2)\n',
                              'a = array([1,2,3,3,2,1],(2,))\n',
                              'a = reshape(array([1,2,3,3,2,1]),shape=(2,))\n',
                              'a = reshape(array([1,2,3,3,2,1]),shape=(2,3))'\
                              '\n',
                              'sort(a,axis=0)\n',
                              'a = reshape(array([1,2,3,3,2,1]),shape=(2,-1)'\
                              ')\n',
                              'sort(a,axis=1)\n',
                              'a = zeros([4])\n',
                              'str(a)\n',
                              'repr(a)\n',
                              'b = str(a)\n',
                              "b.replace('3',':')\n",
                              "b.replace('0','3')\n",
                              "b.replace('0',':')\n",
                              'i = zeros([4])\n',
                              'i[array([3,1]) = array([1,2])\n',
                              ']\n',
                              'i[array([3,1])] = array([1,2])\n',
                              'i\n',
                              "str(i).replace('0',':')\n",
                              'a = "[1 : :]"\n',
                              'b = ","*3\n',
                              'zip(a,b)\n',
                              'str(zip(a,b))\n',
                              'repr(zip(a,b))\n',
                              'a[1:-1]\n',
                              'b = ""\n',
                              'b += a\n',
                              'b += ", "\n',
                              'b\n',
                              'b[:-1]\n',
                              'b[:-2]\n',
                              'tmp = zeros([3]) + -1\n',
                              'tmp[0] = 0\n',
                              "tmp = str(tmp).replace('-1',':')\n",
                              '\t\tprint ch\n',
                              'indexStr = "["\n',
                              'for ch in tmp[1:-1]:\n',
                              '\tif not ch == " ":\n',
                              '\t\tindexStr += ch\n',
                              '\t\tindexStr += ", "\n',
                              'indexStr[:-1]\n',
                              'indexStr[:-2]\n',
                              'tmp\n',
                              'tmp[1:-1]\n',
                              'ch\n',
                              'indexStr\n',
                              'a = reshape(array(range(24)), (4,-1))\n',
                              'a\n',
                              'a.flat[0]\n',
                              'a.flat[0,2]\n',
                              'a.flat[[0,2]]\n',
                              'a[0,1]\n',
                              'a[0,2]\n',
                              'a[1,2]\n',
                              'a[2,2]\n',
                              'a.flat[1:5]\n',
                              'a.flat[[1:5]]\n',
                              'from numarray import *\n',
                              'from Dist\n',
                              'from DiscreteDistribution import *\n',
                              'a = DiscreteDistribution(ones([2,2]),2)\n',
                              'b = DiscreteDistribution(ones([2,2]),2)\n',
                              'b=copy.deepcopy(a)\n',
                              'b.CPT[1,1]=4\n',
                              'b.CPT\n',
                              'a.CPT\n']}
debug.var-col-widths = [0.40816326530612246,
                        0.59183673469387754]
edit.dont-ask-to-fix-inconsistent-indents = {loc('../../../../Python24/Lib/site-packages/numarray/ufunc.py'): 1}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': '93tMYAXvTvXUpWKgA3wuYQzave'\
        'TdGNMz',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'current_pages': [0,
                                   0],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'tree-states': {'deep': {'col'\
        'umn-widths': [1.0],
        'expanded-nodes': [(0,),
                           (1,),
                           (2,),
                           (3,),
                           (4,),
                           (5,),
                           (6,),
                           (8,)],
        'selected-nodes': [(0,
                            0)],
        'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': 0,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               None)],
                 'primary_view_state': {'area': 'wide',
        'current_pages': [2],
        'notebook_display': 'normal',
        'notebook_percent': 0.37195828505214368,
        'override_title': None,
        'pagelist': [('debug-io',
                      'wide',
                      1,
                      {'first-line': 0,
                       'selection_end': 15,
                       'selection_start': 15}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'first-line': 165,
                       'selection_end': 4930,
                       'selection_start': 4930}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'first-line': 36,
                       'selection_end': 1272,
                       'selection_start': 1272}),
                     ('search',
                      'wide',
                      0,
                      {'action': 'replace',
                       'file-set': None,
                       'mode': 'file',
                       'options': {'AutoBackground': 1,
                                   'AutoFind': 1,
                                   'AutoShowBatch': 0,
                                   'Fast': 1,
                                   'Incremental': 1,
                                   'InterpretBackslash': 0,
                                   'MatchCase': 1,
                                   'OmitBinary': 1,
                                   'Recursive': 1,
                                   'ReplaceOnDisk': 0,
                                   'Reverse': 0,
                                   'WholeWords': 1,
                                   'Wrapping': 1},
                       'prefix-file': 'short-file',
                       'prefix-lineno': 1,
                       'regex-flags': 44,
                       'replace-entry-expanded': 0,
                       'replace-string': 'type=Float32',
                       'scope': ['project-files',
                                 None],
                       'search-entry-expanded': 0,
                       'search-string': 'setValue',
                       'search-style': 'text',
                       'starting-directory': 'c:\\cygwin\\home\\elliot\\trun'\
        'k\\'}),
                     ('debug-data',
                      'wide',
                      0,
                      None),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        'self.CPT.CPT')],
                       'tree-state': {'column-widths': [0.40816326530612246,
        0.59183673469387754],
                                      'expanded-nodes': [(0,),
        (0,
         0),
        (0,
         0,
         0),
        (0,
         0,
         0,
         0),
        (0,
         0,
         0,
         1),
        (0,
         0,
         1),
        (0,
         0,
         1,
         0),
        (0,
         0,
         1,
         1)],
                                      'selected-nodes': [],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('Inference/JunctionTreeEngine.py'),
        {'first-line': 36,
         'selection_end': 1412,
         'selection_start': 1412},
        1123028919.711),
        (loc('Inference/JunctionTreeEngine.py'),
         {'first-line': 51,
          'selection_end': 2617,
          'selection_start': 2617},
         1123028922.789),
        (loc('Inference/JunctionTreeEngine.py'),
         {'first-line': 67,
          'selection_end': 3185,
          'selection_start': 3185},
         1123028924.8670001),
        (loc('Inference/JunctionTreeEngine.py'),
         {'first-line': 91,
          'selection_end': 3733,
          'selection_start': 3733},
         1123028926.507),
        (loc('testing/MainTest.py'),
         {'first-line': 0,
          'selection_end': 209,
          'selection_start': 209},
         1123029036.039),
        (loc('Inference/JunctionTreeEngine.py'),
         {'first-line': 85,
          'selection_end': 3167,
          'selection_start': 3167},
         1123029040.5699999),
        (loc('Inference/JunctionTreeEngine.py'),
         {'first-line': 85,
          'selection_end': 3565,
          'selection_start': 3565},
         1123029048.711),
        (loc('Inference/JunctionTreeEngine.py'),
         {'first-line': 92,
          'selection_end': 3138,
          'selection_start': 3138},
         1123029050.789),
        (loc('testing/MainTest.py'),
         {'first-line': 0,
          'selection_end': 209,
          'selection_start': 209},
         1123029154.8510001),
        (loc('testing/JunctionTreeTest.py'),
         {'first-line': 19,
          'selection_end': 503,
          'selection_start': 503},
         1123029161.8510001),
        (loc('testing/JunctionTreeTest.py'),
         {'first-line': 19,
          'selection_end': 610,
          'selection_start': 610},
         1123029182.7420001),
        (loc('testing/JunctionTreeTest.py'),
         {'first-line': 30,
          'selection_end': 967,
          'selection_start': 967},
         1123029189.914),
        (loc('Graph/JoinTree.py'),
         {'first-line': 33,
          'selection_end': 2518,
          'selection_start': 2518},
         1123029196.5699999),
        (loc('testing/JunctionTreeTest.py'),
         {'first-line': 52,
          'selection_end': 1624,
          'selection_start': 1624},
         1123029205.789),
        (loc('testing/JunctionTreeTest.py'),
         {'first-line': 59,
          'selection_end': 504,
          'selection_start': 504},
         1123029490.007),
        (loc('testing/MainTest.py'),
         {'first-line': 0,
          'selection_end': 209,
          'selection_start': 209},
         1123029522.586),
        (loc('testing/JunctionTreeTest.py'),
         {'first-line': 68,
          'selection_end': 2008,
          'selection_start': 2008},
         1123029528.0699999),
        (loc('testing/JunctionTreeTest.py'),
         {'first-line': 66,
          'selection_end': 1990,
          'selection_start': 1990},
         1123029599.8510001),
        (loc('testing/MainTest.py'),
         {'first-line': 0,
          'selection_end': 209,
          'selection_start': 209},
         1123029809.289),
        [loc('testing/JunctionTreeTest.py'),
         {'first-line': 56,
          'selection_end': 1624,
          'selection_start': 1624},
         1123029816.2420001]],
        19),
        'current-loc': loc('testing/JunctionTreeTest.py'),
        'editor-states': {loc('Distributions/DiscreteDistribution.py'): {'fi'\
        'rst-line': 0,
        'selection_end': 1477,
        'selection_start': 1477},
                          loc('General/SequenceGenerator.py'): {'first-line': 0,
        'selection_end': 627,
        'selection_start': 627},
                          loc('General/utilities.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('Graph/Clique.py'): {'first-line': 24,
        'selection_end': 1391,
        'selection_start': 1391},
                          loc('Graph/Graph.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('Graph/GraphUtilities.py'): {'first-line': 59,
        'selection_end': 2344,
        'selection_start': 2344},
                          loc('Graph/JoinTree.py'): {'first-line': 33,
        'selection_end': 2518,
        'selection_start': 2518},
                          loc('Graph/Sepset.py'): {'first-line': 0,
        'selection_end': 430,
        'selection_start': 430},
                          loc('Graph/TriangleGraph.py'): {'first-line': 0,
        'selection_end': 678,
        'selection_start': 678},
                          loc('Heap/PriorityQueue.py'): {'first-line': 0,
        'selection_end': 422,
        'selection_start': 422},
                          loc('Inference/InferenceEngine.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('Inference/JunctionTreeEngine.py'): {'first-li'\
        'ne': 92,
        'selection_end': 3138,
        'selection_start': 3138},
                          loc('Network/BayesNet.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('testing/EnumerationTest.py'): {'first-line': 17,
        'selection_end': 0,
        'selection_start': 0},
                          loc('testing/JunctionTreeTest.py'): {'first-line': 69,
        'selection_end': 1624,
        'selection_start': 1624},
                          loc('testing/MainTest.py'): {'first-line': 0,
        'selection_end': 209,
        'selection_start': 209},
                          loc('testing/SequenceGeneratorTest.py'): {'first-l'\
        'ine': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('testing/UtilitiesTest.py'): {'first-line': 20,
        'selection_end': 0,
        'selection_start': 0}},
        'has-focus': True},
                               'open_files': [u'Distributions/DiscreteDistribution.py',
        u'General/SequenceGenerator.py',
        u'General/utilities.py',
        u'Graph/Clique.py',
        u'Graph/Graph.py',
        u'Graph/GraphUtilities.py',
        u'Graph/JoinTree.py',
        u'Graph/Sepset.py',
        u'Graph/TriangleGraph.py',
        u'Heap/PriorityQueue.py',
        u'Inference/InferenceEngine.py',
        u'Inference/JunctionTreeEngine.py',
        u'Network/BayesNet.py',
        u'testing/EnumerationTest.py',
        u'testing/MainTest.py',
        u'testing/SequenceGeneratorTest.py',
        u'testing/UtilitiesTest.py',
        u'testing/JunctionTreeTest.py']},
        'split_percents': {0: 0.5},
        'splits': 1,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         -1,
                         1260,
                         974)}]}
guimgr.recent-documents = [loc('testing/JunctionTreeTest.py')]
guimgr.visual-state = {loc('Distributions/DiscreteDistribution.py'): {'first'\
        '-line': 12,
        'selection_end': 840,
        'selection_start': 840},
                       loc('Examples/ExampleModels.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('General/ArrayIndexGenerator.py'): {'first-line': 0,
        'selection_end': 680,
        'selection_start': 680},
                       loc('General/SequenceGenerator.py'): {'first-line': 7,
        'selection_end': 385,
        'selection_start': 378},
                       loc('General/utilities.py'): {'first-line': 10,
        'selection_end': 531,
        'selection_start': 528},
                       loc('Graph/BayesNode.py'): {'first-line': 0,
        'selection_end': 296,
        'selection_start': 296},
                       loc('Graph/Clique.py'): {'first-line': 0,
        'selection_end': 366,
        'selection_start': 366},
                       loc('Graph/Cluster.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Graph/DirectedNode.py'): {'first-line': 0,
        'selection_end': 170,
        'selection_start': 170},
                       loc('Graph/Graph.py'): {'first-line': 0,
        'selection_end': 12,
        'selection_start': 12},
                       loc('Graph/GraphUtilities.py'): {'first-line': 42,
        'selection_end': 1344,
        'selection_start': 1341},
                       loc('Graph/JoinTree.py'): {'first-line': 12,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Graph/MoralGraph.py'): {'first-line': 0,
        'selection_end': 355,
        'selection_start': 352},
                       loc('Graph/Node.py'): {'first-line': 0,
        'selection_end': 617,
        'selection_start': 617},
                       loc('Graph/Sepset.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Graph/TriangleGraph.py'): {'first-line': 0,
        'selection_end': 678,
        'selection_start': 678},
                       loc('Heap/ClusterBinaryHeap.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Heap/PriorityQueue.py'): {'first-line': 0,
        'selection_end': 422,
        'selection_start': 422},
                       loc('Inference/EnumerationEngine.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Inference/InferenceEngine.py'): {'first-line': 0,
        'selection_end': 280,
        'selection_start': 277},
                       loc('Inference/JunctionTreeEngine.py'): {'first-line': 6,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Network/BayesNet.py'): {'first-line': 0,
        'selection_end': 12,
        'selection_start': 12},
                       loc('Old/OldJTreeIdeas.py'): {'first-line': 186,
        'selection_end': 0,
        'selection_start': 0},
                       loc('testing/BayesNetTest.py'): {'first-line': 52,
        'selection_end': 0,
        'selection_start': 0},
                       loc('testing/EnumerationTest.py'): {'first-line': 17,
        'selection_end': 566,
        'selection_start': 559},
                       loc('testing/GraphUtilitiesTest.py'): {'first-line': 0,
        'selection_end': 98,
        'selection_start': 98},
                       loc('testing/JunctionTreeTest.py'): {'first-line': 139,
        'selection_end': 3338,
        'selection_start': 3338},
                       loc('testing/MainTest.py'): {'first-line': 0,
        'selection_end': 431,
        'selection_start': 424},
                       loc('testing/RandomTests.py'): {'first-line': 0,
        'selection_end': 36,
        'selection_start': 36},
                       loc('testing/SequenceGeneratorTest.py'): {'first-line': 18,
        'selection_end': 713,
        'selection_start': 706},
                       loc('testing/UtilitiesTest.py'): {'first-line': 20,
        'selection_end': 612,
        'selection_start': 605},
                       loc('../../../../Python24/Lib/site-packages/numarray/generic.py'): {''\
        'first-line': 633,
        'selection_end': 23730,
        'selection_start': 23730},
                       loc('../../../../Python24/Lib/site-packages/numarray/numarraycore.py'): {''\
        'first-line': 341,
        'selection_end': 11502,
        'selection_start': 11502},
                       loc('../../../../Python24/Lib/site-packages/numarray/ufunc.py'): {''\
        'first-line': 974,
        'selection_end': 37503,
        'selection_start': 37503}}
proj.env-vars = {loc('Graph/GraphUtilities.py'): ('project',
        ['']),
                 loc('testing/GraphUtilitiesTest.py'): ('project',
        ['']),
                 loc('unknown:<untitled> #1'): ('project',
        ['']),
                 loc('testing/JunctionTreeTest.py'): ('project',
        ['']),
                 loc('testing/MainTest.py'): ('project',
        ['']),
                 loc('testing/RandomTests.py'): ('project',
        [''])}
search.replace-history = ['alltrue',
                          'Float64']
search.search-history = ['setValue',
                         'Float',
                         'numarray',
                         'Numeric',
                         'Cluster',
                         'getValue',
                         'all',
                         'type=Float32',
                         'typeFloat32',
                         'tFloat32',
                         'Float32',
                         'obj',
                         'inf',
                         'setMultipleIndex',
                         'setMultipleValues',
                         'setMju',
                         'set',
                         'setMultipleValue',
                         'zeros',
                         'ones']
