#!wing
#!version=2.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.file-list = [loc('Distributions/DiscreteDistribution.py'),
                  loc('Examples/ExampleModels.py'),
                  loc('General/SequenceGenerator.py'),
                  loc('General/utilities.py'),
                  loc('Graph/BayesNode.py'),
                  loc('Graph/Clique.py'),
                  loc('Graph/Cluster.py'),
                  loc('Graph/DAG.py'),
                  loc('Graph/DirectedNode.py'),
                  loc('Graph/Graph.py'),
                  loc('Graph/GraphUtilities.py'),
                  loc('Graph/JoinTree.py'),
                  loc('Graph/MoralGraph.py'),
                  loc('Graph/Node.py'),
                  loc('Graph/Sepset.py'),
                  loc('Graph/TriangleGraph.py'),
                  loc('Inference/EnumerationEngine.py'),
                  loc('Inference/InferenceEngine.py'),
                  loc('Network/BayesNet.py'),
                  loc('Old/OldJTreeIdeas.py'),
                  loc('testing/BayesNetTest.py'),
                  loc('testing/EnumerationTest.py'),
                  loc('testing/JunctionTreeTest.py'),
                  loc('testing/MainTest.py'),
                  loc('testing/SequenceGeneratorTest.py'),
                  loc('testing/UtilitiesTest.py'),
                  loc('working/Factor.py'),
                  loc('working/Inference/EliminationEngine.py'),
                  loc('working/Inference/JunctionTreeEngine.py'),
                  loc('working/Inference/MCMCEngine.py'),
                  loc('working/Learning/UpdateParams.py'),
                  loc('working/network.py')]
proj.file-type = 'normal'
[user attributes]
debug.breakpoints = {loc('testing/MainTest.py'): {10: (0,
        None,
        1,
        0),
        13: (0,
             None,
             1,
             0)}}
debug.debug-probe-history = {loc('testing/MainTest.py'): ['Q.CPT\n',
        'a = Q.CPT[False]\n',
        'allclose(a,.1220\n',
        ')\n',
        'allclose(a,.1220,atol=.001)\n',
        'allclose(a,.1220,atol=.00001)\n',
        'a = Q.CPT[True]\n',
        'allclose(a,.1220,atol=.0001)\n',
        'allclose(a,.8780,atol=.0001)\n',
        'unique(a,c)\n',
        'a\n',
        'state\n',
        'self.bnet.parentIndices(i)\n',
        'state[self.bnet.parentIndices(i)]\n',
        'statei]\n',
        'state[i]\n',
        'state[array([])]\n',
        'seqs[0]\n',
        'seqs[3]\n',
        'seqs[1]\n',
        'seqs[2]\n']}
debug.run-args = {loc('testing/UtilitiesTest.py'): 'import UtilityTest\nUtil'\
        'ityTest.test()'}
debug.shell-history = {None: ['newA = reshape(a,(-1,1))\n',
                              'newa\n',
                              'newA\n',
                              'a[1,]\n',
                              'newA[1,]\n',
                              'newA[0,]\n',
                              'newA[0]\n',
                              'newA[1]\n',
                              'newA[5]\n',
                              'newA[6]\n',
                              'newA[3]\n',
                              'newA[7]\n',
                              'put(mask, [1,1], 1, axis=(1,2))\n',
                              'a = take(a,[1,1],axis(1,2))\n',
                              'a = take(a,[1,1],axis=(1,2))\n',
                              'a = ones([2,2,2])\n',
                              'b = take(a,[1,1],axis=(1,2))\n',
                              'b = b*2\n',
                              'for x in [1,2,3,4] and not in [2,4]:\n',
                              '\tprint x\n',
                              's = [1,2,3,4]\n',
                              'w = [2,3]\n',
                              'setdiff(s,w)\n',
                              'intersection(s,w)\n',
                              'union(s,w)\n',
                              's\n',
                              '[i for i in s if not (i in w)] \n',
                              'w\n',
                              'd[w]\n',
                              'e[w]\n',
                              'm = zeros([8], type=Bool)\n',
                              'm[[3,5]] = 1\n',
                              'm\n',
                              'e[m]\n',
                              'array(range(8))[m]\n',
                              '[1,2,3] - 1\n',
                              'array([1,2,3]) - 1\n',
                              'e[0] -= 1\n',
                              'e\n',
                              'for i in [1,2,3,4,5]:\n',
                              '\tif i in [1,2,3]:\n',
                              '\telse:\n',
                              '\t\tprint "breaking"\n',
                              'a = [1,2,3,4]\n',
                              'a[2:]\n',
                              'a[4:]\n',
                              'zip([1,2,3],[4,5,6])\n',
                              'list(1)\n',
                              'list([1])\n',
                              'l = [x for list([i]) in [1,2,3]]\n',
                              'l = [x for i in [1,2,3]: x=list([i])]\n',
                              'isinstance(a,types.ListType)\n',
                              'for i in [1,2,3]:\n',
                              '\twhile True:\n',
                              '\t\tprint i\n',
                              '\t\tbreak\n',
                              'from DiscreteDistribution import *\n',
                              'd1 = DiscreteDistribution( zeros([2]), 2 )\n',
                              'd2 = DiscreteDistribution( zeros([3]), 3 )\n',
                              'd3 = DiscreteDistribution( zeros([4]), 4 )\n',
                              '[x.ns for x in [d1,d2,d3]]\n',
                              '[list([x.ns]) for x in [d1,d2,d3]]\n',
                              '[x for x in a if x == 2 or x == 3]\n',
                              'b = [2,3]\n',
                              'b.append(6)\n',
                              '[e for e in a if e in b]\n',
                              'a[:] = 10\n',
                              'a[:] = [10]\n',
                              'b.index(2)\n',
                              'i = 4\n',
                              'j = 5\n',
                              '[(x,a,b) for x in b]\n',
                              '[(x,i,j) for x in b]\n',
                              '[x for x in a+b]\n',
                              'a = a+b\n',
                              'a.sort()\n',
                              'a\n',
                              'import C:\\cygwin\\home\\elliot\\trunk\\Heap\\'\
                              'BinaryHeap\n',
                              'import BinaryHeap\n',
                              'a = BinaryHeap.BinaryHeap()\n',
                              'a.insert(3)\n',
                              'a.queue\n',
                              'import PriorityQueue\n',
                              'a = PriorityQueue.PriorityQueue()\n',
                              'a.insert(4)\n',
                              'a.insert(0)\n',
                              'a.insert(2)\n',
                              'a.insert(1)\n',
                              '[x for x in a]\n',
                              'b = [1,2,3]\n',
                              'b.iter()\n',
                              'b.__iter__()\n',
                              'b.__iter__\n',
                              'b[0] = [4,5,6]\n',
                              'i = b[0]\n',
                              'del b[0]\n',
                              'b\n',
                              'i\n',
                              'd = []\n',
                              'd[0]\n']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'Lm9hxFusXIfgAt4oURJH8vDaxt'\
        'PGupG4',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'current_pages': [1],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.15996074582924436,
                 'override_title': None,
                 'pagelist': [('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'tree-states': {'deep': {'col'\
        'umn-widths': [1.0],
        'expanded-nodes': [(0,),
                           (1,),
                           (2,),
                           (3,),
                           (4,),
                           (5,),
                           (7,),
                           (8,),
                           (8,
                            0),
                           (8,
                            1)],
        'selected-nodes': [(7,
                            0)],
        'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': 0,
                                'wrap-lines': 1}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('testing/UtilitiesTest.py'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('testing/UtilitiesTest.py'),
                      'test')]},
        loc('unknown:<untitled> #1'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('General/utilities.py'): {'column-widths': [1.0],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('function def',
        loc('General/utilities.py'),
        'addToPriorityQueue')]},
        loc('unknown:<untitled> #2'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('Network/BayesNet.py'): {'column-widths': [1.0],
                                     'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('class def',
        loc('Network/BayesNet.py'),
        'BayesNet')]},
        loc('testing/JunctionTreeTest.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('testing/JunctionTreeTest.py'),
                      'testMoral')]},
        loc('testing/MainTest.py'): {'column-widths': [1.0],
                                     'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('testing/MainTest.py'),
        'Bsuccess')]},
        loc('working/Inference/JunctionTreeEngine.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('working/Inference/JunctionTreeEngine.py'),
                             'Clique')]],
        'top-node': [('class def',
                      loc('working/Inference/JunctionTreeEngine.py'),
                      'Clique')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': 0,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': 0,
        u'Imported': 0,
        u'Modules': 1}})],
                 'primary_view_state': {'area': 'wide',
        'current_pages': [4],
        'notebook_display': 'normal',
        'notebook_percent': 0.32948929159802309,
        'override_title': None,
        'pagelist': [('debug-io',
                      'wide',
                      1,
                      {'first-line': 0,
                       'selection_end': 87,
                       'selection_start': 87}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'first-line': 3,
                       'selection_end': 108,
                       'selection_start': 108}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'first-line': 42,
                       'selection_end': 1231,
                       'selection_start': 1231}),
                     ('search',
                      'wide',
                      0,
                      {'action': 'search',
                       'file-set': None,
                       'mode': 'file',
                       'options': {'AutoBackground': 1,
                                   'AutoFind': 1,
                                   'AutoShowBatch': 0,
                                   'Fast': 1,
                                   'Incremental': 1,
                                   'InterpretBackslash': 0,
                                   'MatchCase': 0,
                                   'OmitBinary': 1,
                                   'Recursive': 1,
                                   'ReplaceOnDisk': 0,
                                   'Reverse': 0,
                                   'WholeWords': 0,
                                   'Wrapping': 1},
                       'prefix-file': 'short-file',
                       'prefix-lineno': 1,
                       'regex-flags': 46,
                       'replace-entry-expanded': 0,
                       'replace-string': '',
                       'scope': ['current-file-batch'],
                       'search-entry-expanded': 0,
                       'search-string': '',
                       'search-style': 'text',
                       'starting-directory': 'C:\\'}),
                     ('debug-data',
                      'wide',
                      0,
                      None),
                     ('debug-watch',
                      'wide',
                      1,
                      None)],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('Graph/GraphUtilities.py'),
        {'first-line': 0,
         'selection_end': 203,
         'selection_start': 203},
        1122547193.859),
        [loc('testing/SequenceGeneratorTest.py'),
         {'first-line': 0,
          'selection_end': 1059,
          'selection_start': 1059},
         1122547200.484],
        [loc('Graph/GraphUtilities.py'),
         {'first-line': 0,
          'selection_end': 203,
          'selection_start': 203},
         1122547206.484],
        [loc('Graph/JoinTree.py'),
         {'first-line': 10,
          'selection_end': 1015,
          'selection_start': 1015},
         1122547209.2809999],
        [loc('Graph/MoralGraph.py'),
         {'first-line': 0,
          'selection_end': 664,
          'selection_start': 664},
         1122547210.671],
        [loc('testing/BayesNetTest.py'),
         {'first-line': 0,
          'selection_end': 0,
          'selection_start': 0},
         1122547212.0929999],
        [loc('Graph/Sepset.py'),
         {'first-line': 11,
          'selection_end': 993,
          'selection_start': 993},
         1122547214.171],
        [loc('Graph/TriangleGraph.py'),
         {'first-line': 4,
          'selection_end': 402,
          'selection_start': 402},
         1122547218.875],
        [loc('working/Inference/JunctionTreeEngine.py'),
         {'first-line': 25,
          'selection_end': 4047,
          'selection_start': 4047},
         1122547224.375],
        [loc('Graph/Node.py'),
         {'first-line': 0,
          'selection_end': 511,
          'selection_start': 511},
         1122547226.4679999],
        [loc('Graph/BayesNode.py'),
         {'first-line': 0,
          'selection_end': 340,
          'selection_start': 340},
         1122547228.984],
        [loc('Graph/Clique.py'),
         {'first-line': 0,
          'selection_end': 910,
          'selection_start': 910},
         1122547230.7179999],
        [loc('Graph/Cluster.py'),
         {'first-line': 0,
          'selection_end': 316,
          'selection_start': 316},
         1122547237.1559999],
        [loc('Graph/DAG.py'),
         {'first-line': 7,
          'selection_end': 861,
          'selection_start': 861},
         1122547241.9679999],
        [loc('Graph/DirectedNode.py'),
         {'first-line': 0,
          'selection_end': 710,
          'selection_start': 710},
         1122547245.125],
        [loc('Distributions/DiscreteDistribution.py'),
         {'first-line': 0,
          'selection_end': 625,
          'selection_start': 625},
         1122547247.25],
        [loc('Graph/Graph.py'),
         {'first-line': 0,
          'selection_end': 637,
          'selection_start': 637},
         1122547250.0780001],
        [loc('Heap/BinaryHeap.py'),
         {'first-line': 0,
          'selection_end': 315,
          'selection_start': 315},
         1122547253.2179999],
        [loc('General/utilities.py'),
         {'first-line': 29,
          'selection_end': 1277,
          'selection_start': 1277},
         1122547261.562],
        [loc('Network/BayesNet.py'),
         {'first-line': 0,
          'selection_end': 635,
          'selection_start': 635},
         1122547271.8429999]],
        19),
        'current-loc': None,
        'editor-states': {},
        'has-focus': False},
                               'open_files': []},
        'split_percents': {},
        'splits': 1,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         -1,
                         1260,
                         974)}]}
guimgr.recent-documents = [loc('Network/BayesNet.py')]
guimgr.visual-state = {loc('unknown:<untitled> #8'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #9'): {'first-line': 0,
        'selection_end': 145,
        'selection_start': 145},
                       loc('General/utilities.py'): {'first-line': 29,
        'selection_end': 1277,
        'selection_start': 1277},
                       loc('Graph/JoinTree.py'): {'first-line': 10,
        'selection_end': 1015,
        'selection_start': 1015},
                       loc('unknown:<untitled> #4'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #5'): {'first-line': 0,
        'selection_end': 145,
        'selection_start': 145},
                       loc('unknown:<untitled> #6'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #7'): {'first-line': 0,
        'selection_end': 86,
        'selection_start': 86},
                       loc('Distributions/DiscreteDistribution.py'): {'first'\
        '-line': 0,
        'selection_end': 625,
        'selection_start': 625},
                       loc('Examples/ExampleModels.py'): {'first-line': 41,
        'selection_end': 1629,
        'selection_start': 1629},
                       loc('General/SequenceGenerator.py'): {'first-line': 0,
        'selection_end': 436,
        'selection_start': 436},
                       loc('Graph/BayesNode.py'): {'first-line': 0,
        'selection_end': 340,
        'selection_start': 340},
                       loc('Graph/Clique.py'): {'first-line': 0,
        'selection_end': 910,
        'selection_start': 910},
                       loc('Graph/Cluster.py'): {'first-line': 0,
        'selection_end': 316,
        'selection_start': 316},
                       loc('Graph/DAG.py'): {'first-line': 7,
        'selection_end': 861,
        'selection_start': 861},
                       loc('Graph/DirectedNode.py'): {'first-line': 0,
        'selection_end': 710,
        'selection_start': 710},
                       loc('Graph/DNode.py'): {'first-line': 0,
        'selection_end': 38,
        'selection_start': 38},
                       loc('Graph/Graph.py'): {'first-line': 0,
        'selection_end': 637,
        'selection_start': 637},
                       loc('Graph/GraphUtilities.py'): {'first-line': 0,
        'selection_end': 203,
        'selection_start': 203},
                       loc('Graph/MoralGraph.py'): {'first-line': 0,
        'selection_end': 664,
        'selection_start': 664},
                       loc('Graph/Node.py'): {'first-line': 0,
        'selection_end': 511,
        'selection_start': 511},
                       loc('Graph/Sepset.py'): {'first-line': 11,
        'selection_end': 993,
        'selection_start': 993},
                       loc('Graph/TriangleGraph.py'): {'first-line': 4,
        'selection_end': 402,
        'selection_start': 402},
                       loc('Heap/BinaryHeap.py'): {'first-line': 0,
        'selection_end': 315,
        'selection_start': 315},
                       loc('Heap/PriorityQueue.py'): {'first-line': 7,
        'selection_end': 700,
        'selection_start': 700},
                       loc('Inference/EnumerationEngine.py'): {'first-line': 32,
        'selection_end': 1117,
        'selection_start': 1117},
                       loc('Inference/InferenceEngine.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Network/BayesNet.py'): {'first-line': 0,
        'selection_end': 635,
        'selection_start': 635},
                       loc('Old/OldJTreeIdeas.py'): {'first-line': 0,
        'selection_end': 8654,
        'selection_start': 8654},
                       loc('testing/BayesNetTest.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('testing/EnumerationTest.py'): {'first-line': 0,
        'selection_end': 1968,
        'selection_start': 1968},
                       loc('testing/JunctionTreeTest.py'): {'first-line': 0,
        'selection_end': 3018,
        'selection_start': 3018},
                       loc('testing/MainTest.py'): {'first-line': 0,
        'selection_end': 214,
        'selection_start': 214},
                       loc('testing/SequenceGeneratorTest.py'): {'first-line': 0,
        'selection_end': 1059,
        'selection_start': 1059},
                       loc('testing/UtilitiesTest.py'): {'first-line': 50,
        'selection_end': 1611,
        'selection_start': 1611},
                       loc('working/Inference/InferenceEngine.py'): {'first-'\
        'line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:untitled-11.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:untitled-2.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('working/Inference/JunctionTreeEngine.py'): {'fir'\
        'st-line': 25,
        'selection_end': 4047,
        'selection_start': 4047}}
proj.env-vars = {loc('testing/MainTest.py'): ('project',
        ['']),
                 loc('testing/UtilitiesTest.py'): ('project',
        [''])}
proj.pyexec = {loc('testing/UtilitiesTest.py'): ('default',
        '')}
proj.pypath = {loc('testing/UtilitiesTest.py'): ('default',
        '')}
