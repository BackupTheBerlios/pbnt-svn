#!wing
#!version=2.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.file-list = [loc('dist/examples/ExampleModels.py'),
                  loc('dist/lib/pbnt/Distribution.py'),
                  loc('dist/lib/pbnt/Graph.py'),
                  loc('dist/lib/pbnt/GraphExceptions.py'),
                  loc('dist/lib/pbnt/Inference.py'),
                  loc('dist/lib/pbnt/Learning.py'),
                  loc('dist/lib/pbnt/Node.py'),
                  loc('dist/lib/pbnt/Utilities/GraphUtilities.py'),
                  loc('dist/lib/pbnt/Utilities/Utilities.py'),
                  loc('dist/lib/pbnt/Utilities/__init__.py'),
                  loc('dist/lib/pbnt/__init__.py'),
                  loc('dist/tests/DistributionUnitTest.py'),
                  loc('dist/tests/GraphUnitTest.py'),
                  loc('dist/tests/InferenceUnitTest.py'),
                  loc('testing/BayesNetTest.py'),
                  loc('testing/DBNJtreeUnrolled.py'),
                  loc('testing/EnumerationTest.py'),
                  loc('testing/GraphUtilitiesTest.py'),
                  loc('testing/JunctionTreeTest.py'),
                  loc('testing/MCMCEngineTest.py'),
                  loc('testing/MainTest.py'),
                  loc('testing/UtilitiesTest.py'),
                  loc('working/Factor.py'),
                  loc('working/Inference/EliminationEngine.py'),
                  loc('working/network.py')]
proj.file-type = 'normal'
[user attributes]
debug.breakpoints = {loc('../tmp.py'): {18: (0,
        None,
        1,
        0),
        20: (0,
             None,
             1,
             0),
        26: (0,
             None,
             1,
             0),
        27: (0,
             None,
             1,
             0)},
                     loc('testing/GraphUtilitiesTest.py'): {5: (0,
        None,
        1,
        0)},
                     loc('testing/MainTest.py'): {13: (0,
        None,
        1,
        0)},
                     loc('untitled-1.py'): {29: (0,
        None,
        1,
        0),
        30: (0,
             None,
             1,
             0),
        31: (0,
             None,
             1,
             0),
        32: (0,
             None,
             1,
             0)}}
debug.debug-probe-history = {None: ['a = "[1 : :]"\n',
                                    'tmp = zeros([3]) + -1\n',
                                    'generateSetArrayCommand([],[],1)\n',
                                    'repr("3")\n'],
                             loc('../tmp.py'): ['self.value\n',
        'c\n',
        'c.val\n',
        'other.val\n',
        'val\n',
        'operand\n',
        'isinsance(operand, UsesOpPriority)\n',
        'isinstance(operand, UsesOpPriority)\n',
        'self.op_priority\n',
        'operand.op_priority\n',
        'a\n',
        'self.val\n',
        'a.vla\n',
        'a.val\n'],
                             loc('dist/tests/GraphUnitTest.py'): ['nodes\n',
        '[node.index for node in self.nodes]\n',
        '[node.index for node in nodes]\n',
        'totIter\n',
        'len(self.nodes)\n',
        'sorted\n',
        '[node.index for node in sorted]\n',
        '[node.id for node in self.nodes]\n',
        'node.id\n',
        '[node.id for node in sorted]\n'],
                             loc('testing/GraphUtilitiesTest.py'): ['indexLi'\
        'st\n'],
                             loc('testing/MainTest.py'): ['self.name\n',
        '[node.name for node in self.nodes]\n',
        'copy.deepcopy(moral.nodes)\n',
        'moral.nodes\n',
        'cnodes = moral.nodes.copy()\n',
        'cnodes = copy(moral.nodes)\n',
        'cnodes = copy.copy(moral.nodes)\n',
        'cnodes\n',
        'cnodes[0].name = changed\n',
        'cnodes[0].name = "changed"\n',
        '[node.name for node in cnodes]\n',
        '[node.name for node in moral.nodes]\n',
        'c = moral.nodes[0]\n',
        'c1 = copy.copy(moral.nodes[0])\n',
        'c.\n',
        'c1.name = "new"\n',
        'c.name\n',
        'c1.name\n',
        'n= moral.deep_copy_nodes()\n',
        'node = moral.nodes[0]\n',
        'n = copy.copy(node)\n',
        'n\n',
        'n.index\n',
        'node.index\n',
        'node.numValues\n',
        'node.id = 1\n',
        'moral.nodes[0].id\n',
        'node.id\n',
        'moral.nodes[0].name\n',
        'node.id = 0\n',
        'node.dist.size()\n',
        'self.potential.table\n',
        'seq\n',
        'node.dist[seq]\n',
        'i\n',
        'val\n',
        'nodes\n',
        'node\n',
        '2 * node.dist[index]\n',
        'Q * node.dist[index]\n',
        'oQ = Q\n',
        'Q = node.dist[index]\n',
        'oW\n',
        'oQ\n',
        'node.dist\n',
        'node.dist.tavle\n',
        'zeros([2,2])\n',
        'shape(node.dist[index])\n',
        'dist.nDims\n',
        'Q = Q[0]\n',
        'Q.table\n',
        'Q\n',
        'node.dist.table\n',
        'cDistribution.table\n',
        'vals\n',
        'node.dist[index]\n',
        'axis\n',
        'Q[0].table\n',
        'seqIndx\n',
        'seqIndex\n',
        'clique.potential[index]\n',
        'cliqueAxes\n',
        'clique\n',
        'sepset.cliqueX\n',
        '[node.name for node in clique.nodes]\n',
        '[node.name for node in sepset.nodes]\n',
        'clique.potential.table\n',
        'oldPotential.table[indices]\n',
        'indices\n',
        'oldPotential.table\n',
        'sepset.potential.table\n',
        'water.nodes[sprinkler]\n',
        'water.nodes\n',
        'nonEvidence\n',
        'self.evidence\n',
        'BLANKEVIDENCE\n',
        'self.evidence.items()\n',
        'item\n',
        'item[1]\n',
        'ar\n',
        'var\n',
        'forest\n',
        'len(forest)\n',
        'node.name\n',
        'node.__nodeSet_\n',
        'node.dist.__nodeSet_\n',
        'self.__class__\n',
        'right.__nodeSet_\n',
        'self.__nodeSet_\n',
        ' self.node.name\n',
        'self.node.name\n',
        'right.__class__\n',
        'right.node.name\n',
        'right.nodes\n',
        'self.nodes\n',
        'repr(sepset.potential.table == 0)\n',
        'oldPotential[repr(sepset.potential.table == 0)]\n',
        'query\n',
        'index\n',
        'axes\n']}
debug.err-values = {None: {},
                    loc('testing/MainTest.py'): {}}
debug.exceptions-ignored = {loc('General/SequenceGenerator.py'): {17: 1,
        19: 1}}
debug.run-args = {loc('Graph/GraphUtilities.py'): 'from GraphUtilities impor'\
        't *\ngenerateArrayIndex([2,2],[0,2],[1],[1])',
                  loc('testing/UtilitiesTest.py'): 'import UtilityTest\nUtil'\
        'ityTest.test()'}
debug.shell-history = {None: ['from Utilities import *\n',
                              'from GraphUtilities import *\n',
                              'seq = SequenceGenerator(array([2,3]))\n',
                              '\tl += [s]\n',
                              '\tl += [s.copy]\n',
                              'seq = sequence_generator(array([2,3]))\n',
                              'l =list()\n',
                              'for s in seq:\n',
                              '\tl += [s.copy()]\n',
                              'l\n',
                              'a[0,0,:]\n',
                              'a[0,0,0]\n',
                              'a[:,:,0]\n',
                              'a[:,:,1]\n',
                              'a[:,:,2]\n',
                              'a[:,:,3]\n',
                              'a[[:,:,0],[:,:,1]]\n',
                              'take(a, [0,1,2,3], axis=(2))\n',
                              'take(a, [0], axis=(2))\n',
                              's = [slice(None),slice(None),slice(0,1)]\n',
                              's1 = [slice(None),slice(None),slice(0,1)]\n',
                              's1[2] = slice(1,2)\n',
                              's1\n',
                              'a[s,s1]\n',
                              'a[[s,s1]]\n',
                              'two = arange(16, (2,2,2,2))\n',
                              'two = arange(16, shape=(2,2,2,2))\n',
                              'two\n',
                              'a = ones([2,2])\n',
                              'b = ones([2,2])\n',
                              'a[1,1] = 0\n',
                              'b[1,1] = 0\n',
                              'b[0,1] = 0\n',
                              'b\n',
                              'a[a==0 and b==0]\n',
                              'a == 0\n',
                              'a == 0 and b == 0\n',
                              'za = a == 0\n',
                              'zb = b == 0\n',
                              'a[za == zb\n',
                              ']\n',
                              'a[b[za] == 0]\n',
                              'b[za]\n',
                              'repr(a == 0)\n',
                              'sa = repr(a==0)\n',
                              'sa\n',
                              "eval('a['+sa+']')\n",
                              "s = ['a','b','c','d']\n",
                              'd = dict(zip(s, [-1] * len(s)))\n',
                              "d['a']\n",
                              "d[['a','c']]\n",
                              '[0]*0\n',
                              "d = dict(zip(['a','b','c'], range(3)))\n",
                              "zip(['a','e','f'], [4,5,6])\n",
                              "d1 = dict(zip(['a','e','f'], [4,5,6]))\n",
                              'd1\n',
                              "d.get(['a','b'])\n",
                              "d.update('a',2)\n",
                              "d.update(['a',2])\n",
                              "d.update([('a',2)])\n",
                              "d1 = zip(['a','e','f'], [4,5,6]))\n",
                              "d1 = zip(['a','e','f'], [4,5,6])\n",
                              'd.update(d1)\n',
                              'd\n',
                              "d.get('a','b')\n",
                              "d.get(('a','b'))\n",
                              "d.fromkeys('a','b')\n",
                              'import dist.tests.InferenceUnitTest\n',
                              'a = [1,2,3,4]\n',
                              'a - 1\n',
                              'a - [1]\n',
                              'a = [1]\n',
                              's = set([234])\n',
                              's = set([2,3,4])\n',
                              'a + s\n',
                              's.union(a)\n',
                              's.pop()\n',
                              's\n',
                              'ls\n',
                              'dir\n',
                              'GraphUnitTest\n',
                              'python GraphUnitTest\n',
                              'import pbnt\n',
                              'pbnt.Distribution.DiscreteDistribution(4)\n',
                              'from pbnt import Distribution\n',
                              'Distribution.DiscreteDistribution(3)\n',
                              'import InferenceUnitTest\n',
                              'from numarray import *\n',
                              'a = ones(4,4)\n',
                              'a = ones([4,4])\n',
                              'a\n',
                              'a == 1\n',
                              'alltrue(a==1)\n',
                              'assert alltrue(a==1)\n',
                              'assert all(a==1)\n',
                              'import DistributionUnitTest\n',
                              'import GraphUnitTest\n',
                              'a = list(1)\n',
                              'a = list([1,2,3])\n',
                              'a = List([1,2,4])\n']}
debug.var-col-widths = [0.40816326530612246,
                        0.59183673469387754]
edit.dont-ask-to-fix-inconsistent-indents = {loc('../../../../Python24/Lib/site-packages/numarray/ufunc.py'): 1}
edit.file-encoding = {loc('testing/DBNJtreeInterface'): 'ISO-8859-1',
                      loc('testing/DBNJtreeInterface.py'): 'ISO-8859-1'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'IB5VUTc8yhSDdc9YYNxuSDrMeJ'\
        'BQnrt9',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'current_pages': [0,
                                   0],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'tree-states': {'deep': {'col'\
        'umn-widths': [1.0],
        'expanded-nodes': [(0,),
                           (0,
                            0),
                           (0,
                            1),
                           (0,
                            1,
                            0),
                           (0,
                            1,
                            0,
                            0),
                           (0,
                            2),
                           (1,)],
        'selected-nodes': [(1,
                            4)],
        'top-node': (0,
                     2,
                     2)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': 0,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               None)],
                 'primary_view_state': {'area': 'wide',
        'current_pages': [5],
        'notebook_display': 'normal',
        'notebook_percent': 0.14754098360655743,
        'override_title': None,
        'pagelist': [('debug-io',
                      'wide',
                      1,
                      None),
                     ('debug-probe',
                      'wide',
                      2,
                      {'first-line': 0,
                       'selection_end': 4,
                       'selection_start': 4}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      None),
                     ('debug-modules',
                      'wide',
                      1,
                      None),
                     ('python-shell',
                      'wide',
                      2,
                      {'first-line': 0,
                       'selection_end': 159,
                       'selection_start': 159}),
                     ('search',
                      'wide',
                      0,
                      {'action': 'search',
                       'file-set': None,
                       'mode': 'file',
                       'options': {'AutoBackground': 1,
                                   'AutoFind': 1,
                                   'AutoShowBatch': 0,
                                   'Fast': 1,
                                   'Incremental': 1,
                                   'InterpretBackslash': 0,
                                   'MatchCase': 0,
                                   'OmitBinary': 1,
                                   'Recursive': 1,
                                   'ReplaceOnDisk': 0,
                                   'Reverse': 0,
                                   'WholeWords': 0,
                                   'Wrapping': 1},
                       'prefix-file': 'short-file',
                       'prefix-lineno': 1,
                       'regex-flags': 46,
                       'replace-entry-expanded': False,
                       'replace-string': 'alltrue',
                       'scope': ['current-file-batch'],
                       'search-entry-expanded': False,
                       'search-string': 'class Evidence',
                       'search-style': 'text',
                       'starting-directory': 'c:\\cygwin\\home\\elliot\\pbnt'\
        '\\trunk\\'}),
                     ('debug-data',
                      'wide',
                      0,
                      None),
                     ('debug-watch',
                      'wide',
                      1,
                      None)],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('testing/JunctionTreeTest.py'),
        {'first-line': 28,
         'selection_end': 243,
         'selection_start': 243},
        1129093244.6194551),
        (loc('dist/lib/pbnt/Node.py'),
         {'first-line': 138,
          'selection_end': 6727,
          'selection_start': 6727},
         1129093245.6804309),
        (loc('dist/tests/GraphUnitTest.py'),
         {'first-line': 78,
          'selection_end': 3578,
          'selection_start': 3578},
         1129093251.569432),
        (loc('dist/lib/pbnt/Node.py'),
         {'first-line': 134,
          'selection_end': 6727,
          'selection_start': 6727},
         1129093255.392004),
        (loc('dist/tests/GraphUnitTest.py'),
         {'first-line': 78,
          'selection_end': 3578,
          'selection_start': 3578},
         1129093297.979007),
        (loc('dist/lib/pbnt/Utilities/__init__.py'),
         {'first-line': 0,
          'selection_end': 33,
          'selection_start': 33},
         1129093382.4129),
        (loc('dist/lib/pbnt/__init__.py'),
         {'first-line': 0,
          'selection_end': 33,
          'selection_start': 0},
         1129093389.561162),
        [loc('dist/lib/pbnt/Utilities/__init__.py'),
         {'first-line': 0,
          'selection_end': 33,
          'selection_start': 33},
         1129093392.8699889],
        [loc('dist/lib/pbnt/__init__.py'),
         {'first-line': 0,
          'selection_end': 33,
          'selection_start': 0},
         1129093394.8760619],
        (loc('dist/tests/GraphUnitTest.py'),
         {'first-line': 82,
          'selection_end': 3580,
          'selection_start': 3580},
         1129093485.665545),
        (loc('dist/lib/pbnt/Node.py'),
         {'first-line': 134,
          'selection_end': 6727,
          'selection_start': 6727},
         1129093503.0150499),
        (loc('dist/tests/GraphUnitTest.py'),
         {'first-line': 82,
          'selection_end': 3581,
          'selection_start': 3581},
         1129093505.0413809),
        (loc('dist/lib/pbnt/Node.py'),
         {'first-line': 134,
          'selection_end': 6727,
          'selection_start': 6727},
         1129093508.575428),
        (loc('dist/tests/GraphUnitTest.py'),
         {'first-line': 82,
          'selection_end': 3603,
          'selection_start': 3603},
         1129093511.3698111),
        (loc('dist/lib/pbnt/Node.py'),
         {'first-line': 134,
          'selection_end': 6727,
          'selection_start': 6727},
         1129093521.9057529),
        (loc('dist/tests/GraphUnitTest.py'),
         {'first-line': 114,
          'selection_end': 4979,
          'selection_start': 4979},
         1129093523.770767),
        (loc('dist/lib/pbnt/Graph.py'),
         {'first-line': 276,
          'selection_end': 12943,
          'selection_start': 12937},
         1129094535.451797),
        (loc('dist/tests/GraphUnitTest.py'),
         {'first-line': 128,
          'selection_end': 5453,
          'selection_start': 5453},
         1129094592.45436),
        [loc('testing/JunctionTreeTest.py'),
         {'first-line': 28,
          'selection_end': 243,
          'selection_start': 243},
         1129094772.5081191],
        [loc('dist/tests/GraphUnitTest.py'),
         {'first-line': 128,
          'selection_end': 5453,
          'selection_start': 5453},
         1129094778.322293]],
        19),
        'current-loc': loc('dist/tests/GraphUnitTest.py'),
        'editor-states': {loc('dist/examples/ExampleModels.py'): {'first-lin'\
        'e': 106,
        'selection_end': 3795,
        'selection_start': 3795},
                          loc('dist/lib/pbnt/Distribution.py'): {'first-line': 30,
        'selection_end': 13549,
        'selection_start': 13549},
                          loc('dist/lib/pbnt/Graph.py'): {'first-line': 276,
        'selection_end': 12943,
        'selection_start': 12937},
                          loc('dist/lib/pbnt/Inference.py'): {'first-line': 286,
        'selection_end': 18603,
        'selection_start': 18603},
                          loc('dist/lib/pbnt/Node.py'): {'first-line': 134,
        'selection_end': 6727,
        'selection_start': 6727},
                          loc('dist/tests/GraphUnitTest.py'): {'first-line': 103,
        'selection_end': 6662,
        'selection_start': 6662},
                          loc('testing/DBNJtreeInterface.py'): {'first-line': 0,
        'selection_end': 640,
        'selection_start': 640},
                          loc('testing/DBNJtreeUnrolled.py'): {'first-line': 0,
        'selection_end': 848,
        'selection_start': 848}},
        'has-focus': True},
                               'open_files': [u'dist/examples/ExampleModels.py',
        u'dist/lib/pbnt/Distribution.py',
        u'testing/DBNJtreeInterface.py',
        u'testing/DBNJtreeUnrolled.py',
        u'dist/lib/pbnt/Inference.py',
        u'dist/lib/pbnt/Node.py',
        u'dist/lib/pbnt/Graph.py',
        u'dist/tests/GraphUnitTest.py']},
        'split_percents': {0: 0.5},
        'splits': 1,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         27,
                         1004,
                         688)}]}
guimgr.recent-documents = [loc('dist/tests/GraphUnitTest.py'),
                           loc('dist/lib/pbnt/Graph.py'),
                           loc('dist/lib/pbnt/Node.py'),
                           loc('dist/lib/pbnt/Inference.py')]
guimgr.visual-state = {loc('../../../../Python24/Lib/copy.py'): {'first-line': 264,
        'selection_end': 8239,
        'selection_start': 8239},
                       loc('../../d:/BBN/clique.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../d:/BBN/permAlgs.py'): {'first-line': 376,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../d:/BBN/table.py'): {'first-line': 172,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../d:/BBN/trees.py'): {'first-line': 606,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../tmp.py'): {'first-line': 0,
        'selection_end': 380,
        'selection_start': 380},
                       loc('Examples/ExampleModels.py'): {'first-line': 0,
        'selection_end': 219,
        'selection_start': 219},
                       loc('Graph/BayesNode.py'): {'first-line': 0,
        'selection_end': 52,
        'selection_start': 52},
                       loc('Graph/Clique.py'): {'first-line': 38,
        'selection_end': 2577,
        'selection_start': 2577},
                       loc('Graph/DirectedNode.py'): {'first-line': 9,
        'selection_end': 340,
        'selection_start': 340},
                       loc('Graph/Graph.py'): {'first-line': 103,
        'selection_end': 8205,
        'selection_start': 8205},
                       loc('Graph/InducedCluster.py'): {'first-line': 0,
        'selection_end': 47,
        'selection_start': 47},
                       loc('Graph/JoinTree.py'): {'first-line': 61,
        'selection_end': 3527,
        'selection_start': 3527},
                       loc('Graph/MoralGraph.py'): {'first-line': 0,
        'selection_end': 40,
        'selection_start': 40},
                       loc('Graph/Sepset.py'): {'first-line': 0,
        'selection_end': 93,
        'selection_start': 93},
                       loc('Graph/TriangleGraph.py'): {'first-line': 13,
        'selection_end': 742,
        'selection_start': 742},
                       loc('Heap/ClusterBinaryHeap.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Inference/InferenceEngine.py'): {'first-line': 220,
        'selection_end': 8095,
        'selection_start': 8095},
                       loc('Inference/JunctionTreeEngine.py'): {'first-line': 152,
        'selection_end': 6053,
        'selection_start': 6053},
                       loc('Learning/LearnParamsEM.py'): {'first-line': 0,
        'selection_end': 2044,
        'selection_start': 48},
                       loc('Learning/UpdateParams.py'): {'first-line': 0,
        'selection_end': 40,
        'selection_start': 0},
                       loc('Network/BayesNet.py'): {'first-line': 0,
        'selection_end': 637,
        'selection_start': 637},
                       loc('Old/Inference/MCMCEngine.py'): {'first-line': 0,
        'selection_end': 301,
        'selection_start': 301},
                       loc('dist/examples/ExampleModels.py'): {'first-line': 105,
        'selection_end': 4808,
        'selection_start': 4808},
                       loc('dist/lib/pbnt/Graph.py'): {'first-line': 137,
        'selection_end': 99,
        'selection_start': 99},
                       loc('dist/lib/pbnt/GraphExceptions.py'): {'first-line': 0,
        'selection_end': 129,
        'selection_start': 129},
                       loc('dist/lib/pbnt/Learning.py'): {'first-line': 0,
        'selection_end': 39,
        'selection_start': 39},
                       loc('dist/lib/pbnt/Node.py'): {'first-line': 114,
        'selection_end': 67,
        'selection_start': 67},
                       loc('dist/tests/DistributionUnitTest.py'): {'first-li'\
        'ne': 18,
        'selection_end': 1410,
        'selection_start': 1410},
                       loc('testing/InterfaceTest.py'): {'first-line': 0,
        'selection_end': 399,
        'selection_start': 0},
                       loc('testing/JunctionTreeTest.py'): {'first-line': 28,
        'selection_end': 243,
        'selection_start': 243},
                       loc('testing/RandomTests.py'): {'first-line': 0,
        'selection_end': 36,
        'selection_start': 36},
                       loc('testing/UtilitiesTest.py'): {'first-line': 0,
        'selection_end': 49,
        'selection_start': 49},
                       loc('working/Learning/LearnParamsEM.py'): {'first-lin'\
        'e': 23,
        'selection_end': 2046,
        'selection_start': 2046},
                       loc('unknown:<untitled> #1'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #10'): {'first-line': 0,
        'selection_end': 22,
        'selection_start': 22},
                       loc('unknown:<untitled> #11'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #12'): {'first-line': 1,
        'selection_end': 430,
        'selection_start': 430},
                       loc('unknown:<untitled> #13'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #2'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #3'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #4'): {'first-line': 0,
        'selection_end': 145,
        'selection_start': 145},
                       loc('unknown:<untitled> #5'): {'first-line': 0,
        'selection_end': 6,
        'selection_start': 6},
                       loc('unknown:<untitled> #6'): {'first-line': 0,
        'selection_end': 145,
        'selection_start': 145},
                       loc('unknown:<untitled> #7'): {'first-line': 0,
        'selection_end': 159,
        'selection_start': 159},
                       loc('unknown:<untitled> #8'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #9'): {'first-line': 0,
        'selection_end': 145,
        'selection_start': 145},
                       loc('../../../../Python24/Lib/site-packages/numarray/generic.py'): {''\
        'first-line': 618,
        'selection_end': 23730,
        'selection_start': 23730},
                       loc('../../../../Python24/Lib/site-packages/numarray/numarraycore.py'): {''\
        'first-line': 1190,
        'selection_end': 43379,
        'selection_start': 43379},
                       loc('../../../../Python24/Lib/site-packages/numarray/ufunc.py'): {''\
        'first-line': 822,
        'selection_end': 35584,
        'selection_start': 35584},
                       loc('../../../../Python24/Lib/unittest.py'): {'first-'\
        'line': 255,
        'selection_end': 9600,
        'selection_start': 9600},
                       loc('../../d:/BBN/BBN.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../d:/BBN/DJT.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../d:/BBN/decompose.py'): {'first-line': 21,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../d:/BBN/graph.py'): {'first-line': 270,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../d:/BBN/keyed_sets.py'): {'first-line': 139,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Distributions/DiscreteDistribution.py'): {'first'\
        '-line': 0,
        'selection_end': 551,
        'selection_start': 551},
                       loc('General/ArrayIndexGenerator.py'): {'first-line': 0,
        'selection_end': 680,
        'selection_start': 680},
                       loc('General/SequenceGenerator.py'): {'first-line': 0,
        'selection_end': 515,
        'selection_start': 515},
                       loc('General/utilities.py'): {'first-line': 0,
        'selection_end': 2618,
        'selection_start': 2618},
                       loc('Graph/Cluster.py'): {'first-line': 0,
        'selection_end': 20,
        'selection_start': 20},
                       loc('Graph/DAG.py'): {'first-line': 46,
        'selection_end': 2005,
        'selection_start': 2005},
                       loc('Graph/GraphUtilities.py'): {'first-line': 0,
        'selection_end': 1444,
        'selection_start': 1444},
                       loc('Graph/Node.py'): {'first-line': 0,
        'selection_end': 5442,
        'selection_start': 5442},
                       loc('Heap/PriorityQueue.py'): {'first-line': 0,
        'selection_end': 422,
        'selection_start': 422},
                       loc('Inference/EnumerationEngine.py'): {'first-line': 45,
        'selection_end': 1409,
        'selection_start': 1409},
                       loc('Old/Graph/InducedCluster.py'): {'first-line': 0,
        'selection_end': 898,
        'selection_start': 898},
                       loc('Old/Heap/ClusterBinaryHeap.py'): {'first-line': 12,
        'selection_end': 1506,
        'selection_start': 32},
                       loc('Old/OldJTreeIdeas.py'): {'first-line': 186,
        'selection_end': 0,
        'selection_start': 0},
                       loc('dist/lib/pbnt/Distribution.py'): {'first-line': 30,
        'selection_end': 13549,
        'selection_start': 13549},
                       loc('dist/lib/pbnt/Inference.py'): {'first-line': 13,
        'selection_end': 649,
        'selection_start': 649},
                       loc('dist/lib/pbnt/InferenceEngine.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('dist/lib/pbnt/Utilities/GraphUtilities.py'): {'f'\
        'irst-line': 102,
        'selection_end': 833,
        'selection_start': 833},
                       loc('dist/lib/pbnt/Utilities/Utilities.py'): {'first-'\
        'line': 171,
        'selection_end': 6831,
        'selection_start': 6831},
                       loc('dist/lib/pbnt/Utilities/__init__.py'): {'first-l'\
        'ine': 0,
        'selection_end': 33,
        'selection_start': 33},
                       loc('dist/lib/pbnt/__init__.py'): {'first-line': 13,
        'selection_end': 1702,
        'selection_start': 1702},
                       loc('dist/tests/GraphUnitTest.py'): {'first-line': 0,
        'selection_end': 323,
        'selection_start': 323},
                       loc('dist/tests/InferenceUnitTest.py'): {'first-line': 58,
        'selection_end': 1596,
        'selection_start': 1596},
                       loc('testing/BayesNetTest.py'): {'first-line': 149,
        'selection_end': 740,
        'selection_start': 720},
                       loc('testing/DBNJtreeUnrolled.py'): {'first-line': 0,
        'selection_end': 848,
        'selection_start': 848},
                       loc('testing/EnumerationTest.py'): {'first-line': 12,
        'selection_end': 841,
        'selection_start': 774},
                       loc('testing/GraphUtilitiesTest.py'): {'first-line': 0,
        'selection_end': 98,
        'selection_start': 98},
                       loc('testing/MCMCEngineTest.py'): {'first-line': 0,
        'selection_end': 298,
        'selection_start': 298},
                       loc('testing/MainTest.py'): {'first-line': 0,
        'selection_end': 292,
        'selection_start': 292},
                       loc('testing/SequenceGeneratorTest.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('testing/UnitTest.py'): {'first-line': 0,
        'selection_end': 27,
        'selection_start': 27},
                       loc('working/Inference/JunctionTreeDBNEngine.py'): {''\
        'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('working/Inference/MCMCEngine.py'): {'first-line': 25,
        'selection_end': 1348,
        'selection_start': 1348},
                       loc('working/Learning/UpdateParams.py'): {'first-line': 0,
        'selection_end': 246,
        'selection_start': 246}}
proj.env-vars = {None: ('default',
                        ['']),
                 loc('../tmp.py'): ('project',
                                    ['']),
                 loc('Graph/GraphUtilities.py'): ('project',
        ['']),
                 loc('dist/tests/GraphUnitTest.py'): ('project',
        ['']),
                 loc('testing/EnumerationTest.py'): ('project',
        ['']),
                 loc('testing/GraphUtilitiesTest.py'): ('project',
        ['']),
                 loc('testing/JunctionTreeTest.py'): ('project',
        ['']),
                 loc('testing/MainTest.py'): ('project',
        ['']),
                 loc('testing/RandomTests.py'): ('project',
        ['']),
                 loc('untitled-1.py'): ('project',
        ['']),
                 loc('unknown:<untitled> #14'): ('project',
        [''])}
search.replace-history = ['alltrue',
                          'Float64']
search.search-history = ['class Evidence',
                         'Evidenc',
                         'Evidence',
                         'import Utilities',
                         'import GraphUtilities',
                         'import GraphUtilit',
                         'import',
                         'change_evidence(',
                         'change_evidence',
                         'change',
                         'evidence',
                         'empty_evidence',
                         'empty_e',
                         'empty',
                         '[water.nodes[',
                         '[water.nodes',
                         '[',
                         'DiscreteDistribution',
                         'DiscreteD',
                         'Potential']
