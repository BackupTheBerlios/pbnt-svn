#!wing
#!version=2.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.file-list = [loc('Distributions/DiscreteDistribution.py'),
                  loc('Examples/ExampleModels.py'),
                  loc('General/utilities.py'),
                  loc('Graph/Graph.py'),
                  loc('Graph/Node.py'),
                  loc('Inference/EnumerationEngine.py'),
                  loc('Inference/InferenceEngine.py'),
                  loc('Network/BayesNet.py'),
                  loc('testing/BayesNetTest.py'),
                  loc('testing/EnumerationTest.py'),
                  loc('testing/JunctionTreeTest.py'),
                  loc('testing/MainTest.py'),
                  loc('testing/UtilitiesTest.py'),
                  loc('working/Factor.py'),
                  loc('working/Inference/EliminationEngine.py'),
                  loc('working/Inference/JunctionTreeEngine.py'),
                  loc('working/Inference/MCMCEngine.py'),
                  loc('working/Learning/UpdateParams.py'),
                  loc('working/network.py')]
proj.file-type = 'normal'
[user attributes]
debug.breakpoints = {loc('testing/MainTest.py'): {9: (0,
        None,
        1,
        0)}}
debug.debug-probe-history = {loc('testing/MainTest.py'): ['Q.CPT\n',
        'a = Q.CPT[False]\n',
        'allclose(a,.1220\n',
        ')\n',
        'allclose(a,.1220,atol=.001)\n',
        'allclose(a,.1220,atol=.00001)\n',
        'a = Q.CPT[True]\n',
        'allclose(a,.1220,atol=.0001)\n',
        'allclose(a,.8780,atol=.0001)\n',
        'unique(a,c)\n',
        'a\n']}
debug.run-args = {loc('testing/UtilitiesTest.py'): 'import UtilityTest\nUtil'\
        'ityTest.test()'}
debug.shell-history = {None: ['a[(a==8)[0]:,]\n',
                              'a==8\n',
                              'a[(a==6)[0]:,]\n',
                              'a[(a==7)[0]:,]\n',
                              'a[where(a==7)[0]:,]\n',
                              'where(a==7[0]\n',
                              'where(a==7)[0]\n',
                              'where(a==7)[0][0]\n',
                              'a[where(a==7)[0][0]:,]\n',
                              'a[where(a==8)[0][0]:,]\n',
                              'a[where(a==8)[0][0]+1:,]\n',
                              'a[where(a==7)[0][0]+1:,]\n',
                              'a[where(a==6)[0][0]+1:,]\n',
                              'a[where(a==9)[0][0]+1:,]\n',
                              'a[a!=7]\n',
                              'concatenate(a, array([1,2,3]))\n',
                              'concatenate((a, array([1,2,3])))\n',
                              'from numarray.ieeespecial import *\n',
                              'inf\n',
                              '1 < inf\n',
                              'inf < 1\n',
                              'INFINITY\n',
                              '1 < INFINITY\n',
                              'inf > 0\n',
                              'i = array([1,2])\n',
                              'a[i] = 1\n',
                              'a[i[0],i[1]]\n',
                              'a[i[0],i[1]] = 1\n',
                              'i\n',
                              'i[:-1]\n',
                              'transpose(i)\n',
                              'reverse(i)\n',
                              'i.reverse()\n',
                              'a = zeros([4,4])\n',
                              'a[1,] = 1\n',
                              'a[,1]=1\n',
                              'a[:,node] = 1\n',
                              'a[:,1] = 1\n',
                              'a[1,:] = 2\n',
                              'a[:,1] = 2\n',
                              'b = copy(a)\n',
                              'b = a.copy()\n',
                              'b = list(a)\n',
                              'a[0] = 4\n',
                              'b\n',
                              'from numarray import *\n',
                              'a = array([1,2,3])\n',
                              'any(a==4\n',
                              ')\n',
                              'b = array([3,4,5])\n',
                              'c = []\n',
                              'c[0]\n',
                              'c\n',
                              'c.add(2)\n',
                              'c + 2\n',
                              'b = array([3,2,1])\n',
                              'a == b\n',
                              'unique((a,b))\n',
                              'b = [4,5,6]\n',
                              'concatenate((a,b))\n',
                              'print lists.methods\n',
                              'print list.method\n',
                              'print list.__method__\n',
                              'print list\n',
                              'list.attributes\n',
                              'print list.__attr__\n',
                              'list.attr\n',
                              'unique([1,2,3], [4,5,6])\n',
                              'any(a==1)\n',
                              'a==1\n',
                              'any(False)\n',
                              'a.member(1)\n',
                              'a.in(1)\n',
                              '1 in a\n',
                              '1 in []\n',
                              'a == [1,2,3]\n',
                              'a == [2,3,1]\n',
                              'a.index(2)\n',
                              'a[0:0]\n',
                              'a[:,0]\n',
                              'a[,0]\n',
                              'a[:0]\n',
                              'a[0]\n',
                              'a[0:1].append(5).append(a[1:])\n',
                              '(a[0:1].append(5)).append(a[1:])\n',
                              '[a[0:1].append(5))].append(a[1:])\n',
                              'a[0:1] + [5] + a[1:]\n',
                              'a[1:2:]\n',
                              'a[a.index(2)+1:]\n',
                              'a[:-1]\n',
                              'a[0:]\n',
                              'a[1:]\n',
                              'a[2:]\n',
                              'a[3:]\n',
                              'a = [1,2,3]\n',
                              'a.remove(1)\n',
                              'a\n',
                              "a = {'a':1, 'b':2}\n",
                              "a['a']\n",
                              'a[1]\n']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'Lm9hxFusXIfgAt4oURJH8vDaxt'\
        'PGupG4',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'current_pages': [1],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'tree-states': {'deep': {'col'\
        'umn-widths': [1.0],
        'expanded-nodes': [(0,),
                           (1,),
                           (2,),
                           (3,),
                           (4,),
                           (5,),
                           (6,),
                           (7,),
                           (7,
                            0),
                           (7,
                            1)],
        'selected-nodes': [(4,
                            0)],
        'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': 0,
                                'wrap-lines': 1}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('unknown:<untitled> #8'): {''\
        'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('unknown:<untitled> #9'): {'column-widths': [1.0],
                                       'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('General/utilities.py'): {'column-widths': [1.0],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('function def',
        loc('General/utilities.py'),
        'addToPriorityQueue')]},
        loc('Network/BayesNet.py'): {'column-widths': [1.0],
                                     'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('class def',
        loc('Network/BayesNet.py'),
        'BayesNet')]},
        loc('testing/JunctionTreeTest.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('testing/JunctionTreeTest.py'),
                      'testMoral')]},
        loc('testing/MainTest.py'): {'column-widths': [1.0],
                                     'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('testing/MainTest.py'),
        'Bsuccess')]},
        loc('testing/UtilitiesTest.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('testing/UtilitiesTest.py'),
                      'test')]},
        loc('working/Inference/JunctionTreeEngine.py'): {'column-widths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('working/Inference/JunctionTreeEngine.py'),
                             'Clique')]],
        'top-node': [('class def',
                      loc('working/Inference/JunctionTreeEngine.py'),
                      'Clique')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': 0,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': 0,
        u'Imported': 0,
        u'Modules': 1}})],
                 'primary_view_state': {'area': 'wide',
        'current_pages': [4],
        'notebook_display': 'normal',
        'notebook_percent': 0.28995057660626034,
        'override_title': None,
        'pagelist': [('debug-io',
                      'wide',
                      1,
                      {'first-line': 9,
                       'selection_end': 132,
                       'selection_start': 132}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'first-line': 0,
                       'selection_end': 4,
                       'selection_start': 4}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'first-line': 3,
                       'selection_end': 321,
                       'selection_start': 321}),
                     ('search',
                      'wide',
                      0,
                      {'action': 'search',
                       'file-set': None,
                       'mode': 'file',
                       'options': {'AutoBackground': 1,
                                   'AutoFind': 1,
                                   'AutoShowBatch': 0,
                                   'Fast': 1,
                                   'Incremental': 1,
                                   'InterpretBackslash': 0,
                                   'MatchCase': 0,
                                   'OmitBinary': 1,
                                   'Recursive': 1,
                                   'ReplaceOnDisk': 0,
                                   'Reverse': 0,
                                   'WholeWords': 0,
                                   'Wrapping': 1},
                       'prefix-file': 'short-file',
                       'prefix-lineno': 1,
                       'regex-flags': 46,
                       'replace-entry-expanded': 0,
                       'replace-string': '',
                       'scope': ['current-file-batch'],
                       'search-entry-expanded': 0,
                       'search-string': '',
                       'search-style': 'text',
                       'starting-directory': 'C:\\'}),
                     ('debug-data',
                      'wide',
                      0,
                      None),
                     ('debug-watch',
                      'wide',
                      1,
                      None)],
        'primary_view_state': {'editor_states': {'bookmarks': ([[loc('unknown:untitled-4.py'),
        {'first-line': 0,
         'selection_end': 0,
         'selection_start': 0},
        1122431184.125],
        (loc('working/Inference/JunctionTreeEngine.py'),
         {'first-line': 33,
          'selection_end': 8290,
          'selection_start': 8290},
         1122431489.7179999),
        (loc('Graph/Node.py'),
         {'first-line': 0,
          'selection_end': 502,
          'selection_start': 502},
         1122431603.4059999),
        (loc('working/Inference/JunctionTreeEngine.py'),
         {'first-line': 35,
          'selection_end': 9019,
          'selection_start': 9019},
         1122431605.062),
        (loc('Graph/Graph.py'),
         {'first-line': 0,
          'selection_end': 382,
          'selection_start': 382},
         1122431713.8429999),
        (loc('working/Inference/JunctionTreeEngine.py'),
         {'first-line': 35,
          'selection_end': 9029,
          'selection_start': 9029},
         1122431714.9059999),
        (loc('Graph/Node.py'),
         {'first-line': 0,
          'selection_end': 502,
          'selection_start': 502},
         1122431780.546),
        (loc('working/Inference/JunctionTreeEngine.py'),
         {'first-line': 35,
          'selection_end': 8544,
          'selection_start': 8544},
         1122431790.0780001),
        (loc('Graph/Node.py'),
         {'first-line': 0,
          'selection_end': 502,
          'selection_start': 502},
         1122431880.171),
        (loc('working/Inference/JunctionTreeEngine.py'),
         {'first-line': 35,
          'selection_end': 9188,
          'selection_start': 9188},
         1122431885.3280001),
        (loc('Graph/Graph.py'),
         {'first-line': 0,
          'selection_end': 382,
          'selection_start': 382},
         1122432045.875),
        (loc('Graph/Node.py'),
         {'first-line': 0,
          'selection_end': 371,
          'selection_start': 371},
         1122432072.25),
        (loc('Graph/Graph.py'),
         {'first-line': 0,
          'selection_end': 392,
          'selection_start': 392},
         1122432118.437),
        (loc('working/Inference/JunctionTreeEngine.py'),
         {'first-line': 0,
          'selection_end': 407,
          'selection_start': 407},
         1122432167.9679999),
        (loc('Inference/InferenceEngine.py'),
         {'first-line': 0,
          'selection_end': 0,
          'selection_start': 0},
         1122432230.734),
        (loc('working/Inference/JunctionTreeEngine.py'),
         {'first-line': 0,
          'selection_end': 407,
          'selection_start': 407},
         1122432233.2650001),
        [loc('testing/EnumerationTest.py'),
         {'first-line': 37,
          'selection_end': 1651,
          'selection_start': 1651},
         1122432235.859],
        (loc('working/Inference/JunctionTreeEngine.py'),
         {'first-line': 0,
          'selection_end': 407,
          'selection_start': 407},
         1122432251.187),
        [loc('Inference/EnumerationEngine.py'),
         {'first-line': 0,
          'selection_end': 0,
          'selection_start': 0},
         1122432252.2030001],
        [loc('working/Inference/JunctionTreeEngine.py'),
         {'first-line': 0,
          'selection_end': 407,
          'selection_start': 407},
         1122432256.875]],
        19),
        'current-loc': loc('working/Inference/JunctionTreeEngine.py'),
        'editor-states': {loc('General/utilities.py'): {'first-line': 0,
        'selection_end': 1092,
        'selection_start': 1092},
                          loc('Graph/Graph.py'): {'first-line': 0,
        'selection_end': 392,
        'selection_start': 392},
                          loc('Graph/Node.py'): {'first-line': 0,
        'selection_end': 371,
        'selection_start': 371},
                          loc('Inference/InferenceEngine.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('Network/BayesNet.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('testing/JunctionTreeTest.py'): {'first-line': 0,
        'selection_end': 3018,
        'selection_start': 3018},
                          loc('working/Inference/JunctionTreeEngine.py'): {''\
        'first-line': 0,
        'selection_end': 559,
        'selection_start': 559}},
        'has-focus': True},
                               'open_files': [u'General/utilities.py',
        u'Network/BayesNet.py',
        u'testing/JunctionTreeTest.py',
        u'Graph/Node.py',
        u'Graph/Graph.py',
        u'Inference/InferenceEngine.py',
        u'working/Inference/JunctionTreeEngine.py']},
        'split_percents': {},
        'splits': 1,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         -1,
                         1260,
                         974)}]}
guimgr.recent-documents = [loc('working/Inference/JunctionTreeEngine.py'),
                           loc('Inference/InferenceEngine.py'),
                           loc('Graph/Graph.py'),
                           loc('Graph/Node.py')]
guimgr.visual-state = {loc('General/utilities.py'): {'first-line': 16,
        'selection_end': 1092,
        'selection_start': 1092},
                       loc('testing/UtilitiesTest.py'): {'first-line': 50,
        'selection_end': 1611,
        'selection_start': 1611},
                       loc('unknown:<untitled> #11'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #12'): {'first-line': 0,
        'selection_end': 145,
        'selection_start': 145},
                       loc('unknown:<untitled> #13'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #14'): {'first-line': 0,
        'selection_end': 86,
        'selection_start': 86},
                       loc('unknown:<untitled> #15'): {'first-line': 0,
        'selection_end': 4,
        'selection_start': 4},
                       loc('unknown:<untitled> #7'): {'first-line': 0,
        'selection_end': 145,
        'selection_start': 145},
                       loc('Inference/EnumerationEngine.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('testing/EnumerationTest.py'): {'first-line': 0,
        'selection_end': 1651,
        'selection_start': 1651},
                       loc('testing/JunctionTreeTest.py'): {'first-line': 0,
        'selection_end': 819,
        'selection_start': 819},
                       loc('testing/MainTest.py'): {'first-line': 0,
        'selection_end': 176,
        'selection_start': 176},
                       loc('working/Inference/InferenceEngine.py'): {'first-'\
        'line': 0,
        'selection_end': 0,
        'selection_start': 0}}
proj.env-vars = {loc('testing/MainTest.py'): ('project',
        ['']),
                 loc('testing/UtilitiesTest.py'): ('project',
        [''])}
proj.pyexec = {loc('testing/UtilitiesTest.py'): ('default',
        '')}
proj.pypath = {loc('testing/UtilitiesTest.py'): ('default',
        '')}
