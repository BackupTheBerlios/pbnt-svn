#!wing
#!version=2.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.file-list = [loc('Distributions/DiscreteDistribution.py'),
                  loc('Factor.py'),
                  loc('Inference/EliminationEngine.py'),
                  loc('Inference/EnumerationEngine.py'),
                  loc('Inference/InferenceEngine.py'),
                  loc('Inference/JunctionTreeEngine.py'),
                  loc('Inference/MCMCEngine.py'),
                  loc('Learning/UpdateParams.py'),
                  loc('Network/BayesNet.py'),
                  loc('PBNT.wpr'),
                  loc('ideas/BayesNetConstructors.py'),
                  loc('network.py'),
                  loc('testing/BayesNetTest.py'),
                  loc('testing/MainTest.py'),
                  loc('utilities.py')]
proj.file-type = 'normal'
[user attributes]
debug.debug-probe-history = {None: ['bnet.graph()\n'],
                             loc('testing/MainTest.py'): ['print "1"\n',
        'bnet.graph()\n',
        'all(bnet.graph == adjMat)\n',
        'bnet.graph\n',
        'adjMat\n',
        'len(ns)\n',
        'len(nodeSizes)\n',
        'ns\n',
        'nodeSizes\n',
        'size(ns)\n',
        'size(nodeSizes)\n',
        'cparents\n',
        'size(cparents)\n',
        'cchildren\n',
        'size(cchildren)\n',
        'sprinkler\n',
        'rain\n',
        'sparents\n',
        'cloudy\n',
        'schildren\n',
        'wetgrass\n',
        'rparents\n',
        'rchildren\n',
        'wgparents\n',
        'wgchildren\n']}
debug.err-values = {None: {}}
debug.shell-history = {None: ['isempty(a)\n',
                              'size(a)\n',
                              'print "\\t test 4"\n',
                              'print "\\ttest 4"\n',
                              'import MainTest\n',
                              'i = 1\n',
                              'print "hmm: " i + 1 + " hmm"\n',
                              'print "hmm: " + "hmm"\n',
                              'print "hmm: " + i + "hmm"\n',
                              'i.str()\n',
                              'i.str\n',
                              'print "hmm: %x hmm" (i+1)\n',
                              'print "hmm: %s hmm" (i+1)\n',
                              'print "hmm: %d hmm" (i+1)\n',
                              'print "hmm: %d hmm" (i)\n',
                              "x = 'a'\n",
                              'print "hmm: %s hmm" (x)\n',
                              'print "hmm: %d hmm" % (i)\n',
                              'print "hmm: %d hmm" % (i+1)\n',
                              'a = zeros([4,4])\n',
                              'a[[0, 1, 2, 3] [1, 2, 0, 2]]=1\n',
                              'i = [0, 1, 2, 3]\n',
                              'j = [1, 2, 0, 2]\n',
                              'put(a, 1, i, j)\n',
                              'a[0,1] = 1\n',
                              'a[1,2] = 1\n',
                              'a[1,3] = 1\n',
                              'a[3,2] = 1\n',
                              'nonzeros(a[:,1])\n',
                              'nonzero(a[:,1])\n',
                              'nonzero(a)\n',
                              'nonzeros(a[:,1])[0]\n',
                              'nonzero(a[:,1])[0]\n',
                              'nonzero(a[:,1])[0][0,0]\n',
                              'nonzero(a[:,1])[0][0]\n',
                              'nonzero(take(a,(0,),1))\n',
                              'take(a,(0,),1)\n',
                              'take(a,(0,),0)\n',
                              'a[0,2] = 1\n',
                              'nonzero(take(a,(0,),0))\n',
                              'nonzero(take(a,(0,),0))[1]\n',
                              'nonzero(take(a,(1,),1))\n',
                              'a\n',
                              'nonzero(take(a,(2,),1))\n',
                              'nonzero(take(a,(2,),1))[0]\n',
                              'len(a)\n',
                              'c = array(range(10))\n',
                              'c\n',
                              'len(c)\n',
                              'zip(range(size(c)), c)\n',
                              'dist = zeros([2,2,2], type=Float)\n',
                              'dist[0,0,] = [1.0,0.0]\n',
                              'dist\n',
                              'dist[1,0,] = [0.1,0.9]\n',
                              'dist[0,1,] = [0.1,0.9]\n',
                              'dist[1,1,] = [0.01,0.99]\n',
                              'dist[0,0,0]\n',
                              'dist[1,0,1\n',
                              'dist[1,0,0]\n',
                              'val = array([1,0,1])\n',
                              'dist[val]\n',
                              'dist[val[:]]\n',
                              'val[0,:]\n',
                              'val[0\n',
                              ']\n',
                              'i = array([0,1,2])\n',
                              'i\n',
                              'dist[i,val]\n',
                              'dist[[1,0,1]]\n',
                              'dist[v in val]\n',
                              'dist[for v in val]\n',
                              'dist[v for v in val]\n',
                              '[v for v in val]\n',
                              'dist[[v for v in val]]\n',
                              'take(dist, val, axis=[0,1,2])\n',
                              'val\n',
                              'dist[1,0,1]\n',
                              'c = [1,2,3]\n',
                              'size(c)\n',
                              'import BayesNetTest.py\n',
                              'numberOfNodes=4\n',
                              'a = zeros([numberOfNodes, numberOfNodes], typ'\
                              'e=bool)\n',
                              'zeros([4,4], type=bool)\n',
                              'zeros([4,4])\n',
                              'zeros([4,4], type=Bool)\n',
                              'import BayesNetTest\n',
                              'BayesNetTest.test()\n',
                              'from numarray import *\n',
                              'a = zeros([4,4], type=Bool)\n',
                              'print a\n',
                              'b = zeros([4,4], type=Bool)\n',
                              'a == b\n',
                              'all (a==b)\n',
                              'b[0,0]=1\n',
                              'a==b\n',
                              'b[:]=1\n',
                              'b\n',
                              'all(a==b)\n',
                              'any(a==b)\n',
                              'all(bnet.graph == adjMat)\n']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'Lm9hxFusXIfgAt4oURJH8vDaxt'\
        'PGupG4',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'current_pages': [0],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'tree-states': {'deep': {'col'\
        'umn-widths': [1.0],
        'expanded-nodes': [(0,),
                           (1,),
                           (2,),
                           (3,),
                           (4,),
                           (5,)],
        'selected-nodes': [(5,
                            1)],
        'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': 0,
                                'wrap-lines': 1}),
                              ('browser',
                               'tall',
                               0,
                               None)],
                 'primary_view_state': {'area': 'wide',
        'current_pages': [1],
        'notebook_display': 'normal',
        'notebook_percent': 0.49710312862108919,
        'override_title': None,
        'pagelist': [('debug-io',
                      'wide',
                      1,
                      {'first-line': 9,
                       'selection_end': 230,
                       'selection_start': 230}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'first-line': 8,
                       'selection_end': 326,
                       'selection_start': 326}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'first-line': 31,
                       'selection_end': 1362,
                       'selection_start': 1362}),
                     ('search',
                      'wide',
                      0,
                      {'action': 'search',
                       'file-set': None,
                       'mode': 'file',
                       'options': {'AutoBackground': 1,
                                   'AutoFind': 1,
                                   'AutoShowBatch': 0,
                                   'Fast': 1,
                                   'Incremental': 1,
                                   'InterpretBackslash': 0,
                                   'MatchCase': 0,
                                   'OmitBinary': 1,
                                   'Recursive': 1,
                                   'ReplaceOnDisk': 0,
                                   'Reverse': 0,
                                   'WholeWords': 0,
                                   'Wrapping': 1},
                       'prefix-file': 'short-file',
                       'prefix-lineno': 1,
                       'regex-flags': 46,
                       'replace-entry-expanded': 0,
                       'replace-string': '',
                       'scope': ['current-file-batch'],
                       'search-entry-expanded': 0,
                       'search-string': '',
                       'search-style': 'text',
                       'starting-directory': 'C:\\'}),
                     ('debug-data',
                      'wide',
                      0,
                      None),
                     ('debug-watch',
                      'wide',
                      1,
                      None)],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('testing/BayesNetTest.py'),
        {'first-line': 56,
         'selection_end': 1959,
         'selection_start': 1959},
        1122073604.859),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 13,
          'selection_end': 851,
          'selection_start': 851},
         1122073643.8280001),
        (loc('Network/BayesNet.py'),
         {'first-line': 2,
          'selection_end': 250,
          'selection_start': 250},
         1122073694.734),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 61,
          'selection_end': 1987,
          'selection_start': 1987},
         1122073705.734),
        (loc('testing/MainTest.py'),
         {'first-line': 0,
          'selection_end': 0,
          'selection_start': 0},
         1122073746.2179999),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 61,
          'selection_end': 2100,
          'selection_start': 2100},
         1122073750.984),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 87,
          'selection_end': 2584,
          'selection_start': 2584},
         1122073775.062),
        (loc('Network/BayesNet.py'),
         {'first-line': 4,
          'selection_end': 582,
          'selection_start': 582},
         1122073791.312),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 87,
          'selection_end': 2584,
          'selection_start': 2584},
         1122073841.375),
        (loc('Network/BayesNet.py'),
         {'first-line': 4,
          'selection_end': 582,
          'selection_start': 582},
         1122073848.3900001),
        (loc('testing/MainTest.py'),
         {'first-line': 0,
          'selection_end': 0,
          'selection_start': 0},
         1122073849.625),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 90,
          'selection_end': 2584,
          'selection_start': 2584},
         1122073854.2179999),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 90,
          'selection_end': 2584,
          'selection_start': 2584},
         1122073865.921),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 99,
          'selection_end': 2701,
          'selection_start': 2701},
         1122073891.25),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 106,
          'selection_end': 3130,
          'selection_start': 3130},
         1122073929.6400001),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 127,
          'selection_end': 3392,
          'selection_start': 3392},
         1122073948.4530001),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 127,
          'selection_end': 3393,
          'selection_start': 3393},
         1122073971.796),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 139,
          'selection_end': 3800,
          'selection_start': 3800},
         1122073991.109),
        (loc('testing/BayesNetTest.py'),
         {'first-line': 155,
          'selection_end': 3973,
          'selection_start': 3973},
         1122074009.859),
        [loc('testing/BayesNetTest.py'),
         {'first-line': 155,
          'selection_end': 3972,
          'selection_start': 3972},
         1122074064.25]],
        19),
        'current-loc': loc('testing/BayesNetTest.py'),
        'editor-states': {loc('Distributions/DiscreteDistribution.py'): {'fi'\
        'rst-line': 0,
        'selection_end': 662,
        'selection_start': 662},
                          loc('ideas/BayesNetConstructors.py'): {'first-line': 0,
        'selection_end': 35,
        'selection_start': 35},
                          loc('Inference/EnumerationEngine.py'): {'first-lin'\
        'e': 13,
        'selection_end': 1201,
        'selection_start': 1201},
                          loc('Network/BayesNet.py'): {'first-line': 4,
        'selection_end': 582,
        'selection_start': 582},
                          loc('testing/BayesNetTest.py'): {'first-line': 168,
        'selection_end': 3972,
        'selection_start': 3972},
                          loc('testing/MainTest.py'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0}},
        'has-focus': False},
                               'open_files': [u'ideas/BayesNetConstructors.py',
        u'Inference/EnumerationEngine.py',
        u'Distributions/DiscreteDistribution.py',
        u'Network/BayesNet.py',
        u'testing/MainTest.py',
        u'testing/BayesNetTest.py']},
        'split_percents': {},
        'splits': 1,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         -1,
                         1004,
                         718)}]}
guimgr.recent-documents = [loc('testing/BayesNetTest.py'),
                           loc('testing/MainTest.py'),
                           loc('Network/BayesNet.py'),
                           loc('Distributions/DiscreteDistribution.py'),
                           loc('Inference/EnumerationEngine.py'),
                           loc('ideas/BayesNetConstructors.py')]
guimgr.visual-state = {loc('testing/MainTest.py'): {'first-line': 0,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #1'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Factor.py'): {'first-line': 0,
        'selection_end': 606,
        'selection_start': 606},
                       loc('testing/BayesNetTest.py'): {'first-line': 0,
        'selection_end': 58,
        'selection_start': 58},
                       loc('../../Python24/Lib/site-packages/numarray/generic.py'): {''\
        'first-line': 520,
        'selection_end': 19612,
        'selection_start': 19612},
                       loc('../../Python24/myconfig.pth'): {'first-line': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../Python24/myconfig.pth.py'): {'first-line': 0,
        'selection_end': 11,
        'selection_start': 11}}
proj.env-vars = {loc('testing/BayesNetTest.py'): ('project',
        ['']),
                 loc('testing/MainTest.py'): ('project',
        [''])}
